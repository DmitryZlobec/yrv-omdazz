C51 COMPILER V9.01   LCD                                                                   02/22/2014 16:10:16 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN LCD.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LCD\LCD.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\LCD.lst) OBJECT(LCD.obj)

line level    source

   1          #include <reg51.h>
   2          #include <intrins.h>
   3          #include <font\font.h>
   4          #include <sys\sys.h>
   5          #include <lcd\lcd.h>
   6          /* 
   7          代码测试环境:单片机STC12LE5A60S2,晶振33M  单片机工作电压3.3V
   8          程序默认IO连接方式：
   9          控制线：RS-P3^5;    WR-P3^6;   RD-P3^7;   CS-P1^0;   REST-P1^2;
  10          数据线: DB0-DB7依次连接P0^0-P0^7;  DB8-DB15依次连接P2^0-P2^7;（8位模式下DB0-DB7可以不连接）
  11          触摸功能连接方式：(不使用触摸可不连接)
  12          T_CLK-P1^7;  T_CS-P1^4;  T_DIN-P3^0;  T_OUT-P3^1;  T_IRQ-P3^4;
  13          */      
  14          u16 BACK_COLOR, POINT_COLOR;   //背景色，画笔色
  15          
  16          #ifdef  Bus_16    //条件编译-16位数据模式   
              void LCD_Writ_Bus(char VH,char VL)   //并行数据写入函数
              {
                  LCD_DataPortH=VH;   
                      LCD_DataPortL=VL;               
                      LCD_WR=0;
                      LCD_WR=1; 
              }
              #else                   //条件编译-8位数据模式 
  25          void LCD_Writ_Bus(char VH,char VL)   //并行数据写入函数
  26          {       
  27   1          LCD_DataPortH=VH;   
  28   1              LCD_WR=0;
  29   1              LCD_WR=1;
  30   1              LCD_DataPortH=VL;               
  31   1              LCD_WR=0;
  32   1              LCD_WR=1;
  33   1      }
  34          #endif
  35          void LCD_WR_DATA8(char VH,char VL) //发送数据-8位参数
  36          {
  37   1          LCD_RS=1;
  38   1              LCD_Writ_Bus(VH,VL);
  39   1      }  
  40           void LCD_WR_DATA(int da)
  41          {
  42   1          LCD_RS=1;
  43   1              LCD_Writ_Bus(da>>8,da);
  44   1      }         
  45          void LCD_WR_REG(int da)  
  46          {       
  47   1          LCD_RS=0;
  48   1              LCD_Writ_Bus(da>>8,da);
  49   1      }
  50           void LCD_WR_REG_DATA(int reg,int da)
  51          {
  52   1          LCD_WR_REG(reg);
  53   1              LCD_WR_DATA(da);
  54   1      }
  55          void Address_set(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2)
C51 COMPILER V9.01   LCD                                                                   02/22/2014 16:10:16 PAGE 2   

  56          { 
  57   1              LCD_WR_REG(0x0020);LCD_WR_DATA8(x1>>8,x1);        //设置X坐标位置
  58   1          LCD_WR_REG(0x0021);LCD_WR_DATA8(y1>>8,y1);   //设置Y坐标位置
  59   1          LCD_WR_REG(0x0050);LCD_WR_DATA8(x1>>8,x1);   //开始X
  60   1              LCD_WR_REG(0x0052);LCD_WR_DATA8(y1>>8,y1);        //开始Y
  61   1          LCD_WR_REG(0x0051);LCD_WR_DATA8(x2>>8,x2);   //结束X
  62   1              LCD_WR_REG(0x0053);LCD_WR_DATA8(y2>>8,y2);   //结束Y
  63   1          LCD_WR_REG(0x0022);                                                                                                  
  64   1      }
  65          void Lcd_Init(void)
  66          {
  67   1      
  68   1      //调用一次这些函数，免得编译的时候提示警告
  69   1              LCD_CS =1;
  70   1              if(LCD_CS==0)
  71   1              {
  72   2                 LCD_WR_REG_DATA(0,0);
  73   2                 LCD_ShowString(0,0," ");
  74   2                 LCD_ShowNum(0,0,0,0);
  75   2                 LCD_Show2Num(0,0,0,0);
  76   2                 LCD_DrawPoint_big(0,0);
  77   2                 LCD_DrawRectangle(0,0,0,0);
  78   2                 Draw_Circle(0,0,0);
  79   2               }         
  80   1              LCD_RD=1;
  81   1              LCD_WR=1;
  82   1              LCD_REST=0;
  83   1              delayms(20);    //此处保证要有5ms以上才能保证复位稳定,推荐20ms
  84   1              LCD_REST=1;     
  85   1              delayms(20);    //此处保证要有5ms以上才能保证复位稳定,推荐20ms          
  86   1              LCD_CS =0;  //打开片选使能
  87   1      
  88   1      LCD_WR_REG_DATA(0x0001,0x0100); 
  89   1       LCD_WR_REG_DATA(0x0002,0x0700); 
  90   1       LCD_WR_REG_DATA(0x0003,0x1030); 
  91   1       LCD_WR_REG_DATA(0x0004,0x0000); 
  92   1       LCD_WR_REG_DATA(0x0008,0x0207);  
  93   1       LCD_WR_REG_DATA(0x0009,0x0000);
  94   1       LCD_WR_REG_DATA(0x000A,0x0000); 
  95   1       LCD_WR_REG_DATA(0x000C,0x0000); 
  96   1       LCD_WR_REG_DATA(0x000D,0x0000);
  97   1       LCD_WR_REG_DATA(0x000F,0x0000);
  98   1      //power on sequence VGHVGL
  99   1       LCD_WR_REG_DATA(0x0010,0x0000);   
 100   1       LCD_WR_REG_DATA(0x0011,0x0007);  
 101   1       LCD_WR_REG_DATA(0x0012,0x0000);  
 102   1       LCD_WR_REG_DATA(0x0013,0x0000); 
 103   1      //vgh 
 104   1       LCD_WR_REG_DATA(0x0010,0x1290);   
 105   1       LCD_WR_REG_DATA(0x0011,0x0227);
 106   1       //delayms(100);
 107   1       //vregiout 
 108   1       LCD_WR_REG_DATA(0x0012,0x001d); //0x001b
 109   1       //delayms(100); 
 110   1       //vom amplitude
 111   1       LCD_WR_REG_DATA(0x0013,0x1500);
 112   1       //delayms(100); 
 113   1       //vom H
 114   1       LCD_WR_REG_DATA(0x0029,0x0018); 
 115   1       LCD_WR_REG_DATA(0x002B,0x000D); 
 116   1      
 117   1      //gamma
C51 COMPILER V9.01   LCD                                                                   02/22/2014 16:10:16 PAGE 3   

 118   1       LCD_WR_REG_DATA(0x0030,0x0004);
 119   1       LCD_WR_REG_DATA(0x0031,0x0307);
 120   1       LCD_WR_REG_DATA(0x0032,0x0002);// 0006
 121   1       LCD_WR_REG_DATA(0x0035,0x0206);
 122   1       LCD_WR_REG_DATA(0x0036,0x0408);
 123   1       LCD_WR_REG_DATA(0x0037,0x0507); 
 124   1       LCD_WR_REG_DATA(0x0038,0x0204);//0200
 125   1       LCD_WR_REG_DATA(0x0039,0x0707); 
 126   1       LCD_WR_REG_DATA(0x003C,0x0405);// 0504
 127   1       LCD_WR_REG_DATA(0x003D,0x0F02); 
 128   1       //ram
 129   1       LCD_WR_REG_DATA(0x0050,0x0000); 
 130   1       LCD_WR_REG_DATA(0x0051,0x00EF);
 131   1       LCD_WR_REG_DATA(0x0052,0x0000); 
 132   1       LCD_WR_REG_DATA(0x0053,0x013F);  
 133   1       LCD_WR_REG_DATA(0x0060,0xA700); 
 134   1       LCD_WR_REG_DATA(0x0061,0x0001); 
 135   1       LCD_WR_REG_DATA(0x006A,0x0000); 
 136   1       //
 137   1       LCD_WR_REG_DATA(0x0080,0x0000); 
 138   1       LCD_WR_REG_DATA(0x0081,0x0000); 
 139   1       LCD_WR_REG_DATA(0x0082,0x0000); 
 140   1       LCD_WR_REG_DATA(0x0083,0x0000); 
 141   1       LCD_WR_REG_DATA(0x0084,0x0000); 
 142   1       LCD_WR_REG_DATA(0x0085,0x0000); 
 143   1       //
 144   1       LCD_WR_REG_DATA(0x0090,0x0010); 
 145   1       LCD_WR_REG_DATA(0x0092,0x0600); 
 146   1       LCD_WR_REG_DATA(0x0093,0x0003); 
 147   1       LCD_WR_REG_DATA(0x0095,0x0110); 
 148   1       LCD_WR_REG_DATA(0x0097,0x0000); 
 149   1       LCD_WR_REG_DATA(0x0098,0x0000);
 150   1       LCD_WR_REG_DATA(0x0007,0x0133);
 151   1      
 152   1      }
 153          //清屏函数
 154          //Color:要清屏的填充色
 155          void LCD_Clear(u16 Color)
 156          {
 157   1              u8 VH,VL;
 158   1              u16 i,j;
 159   1              VH=Color>>8;
 160   1              VL=Color;       
 161   1              Address_set(0,0,LCD_W-1,LCD_H-1);
 162   1          for(i=0;i<LCD_W;i++)
 163   1               {
 164   2                for (j=0;j<LCD_H;j++)
 165   2                      {
 166   3                       LCD_WR_DATA8(VH,VL);
 167   3                  }
 168   2      
 169   2                }
 170   1      }
 171          //画点
 172          //POINT_COLOR:此点的颜色
 173          void LCD_DrawPoint(u16 x,u16 y)
 174          {
 175   1              Address_set(x,y,x,y);//设置光标位置 
 176   1              LCD_WR_DATA(POINT_COLOR);           
 177   1      }        
 178          //画一个大点
 179          //POINT_COLOR:此点的颜色
C51 COMPILER V9.01   LCD                                                                   02/22/2014 16:10:16 PAGE 4   

 180          void LCD_DrawPoint_big(u16 x,u16 y)
 181          {
 182   1              LCD_Fill(x-1,y-1,x+1,y+1,POINT_COLOR);
 183   1      } 
 184          //在指定区域内填充指定颜色
 185          //区域大小:
 186          //  (xend-xsta)*(yend-ysta)
 187          void LCD_Fill(u16 xsta,u16 ysta,u16 xend,u16 yend,u16 color)
 188          {          
 189   1              u16 i,j; 
 190   1              Address_set(xsta,ysta,xend,yend);      //设置光标位置 
 191   1              for(i=ysta;i<=yend;i++)
 192   1              {                                                                                                                       
 193   2                      for(j=xsta;j<=xend;j++)LCD_WR_DATA(color);//设置光标位置            
 194   2              }                                                   
 195   1      }  
 196          //画线
 197          //x1,y1:起点坐标
 198          //x2,y2:终点坐标  
 199          void LCD_DrawLine(u16 x1, u16 y1, u16 x2, u16 y2)
 200          {
 201   1              u16 t; 
 202   1              int xerr=0,yerr=0,delta_x,delta_y,distance; 
 203   1              int incx,incy,uRow,uCol; 
 204   1      
 205   1              delta_x=x2-x1; //计算坐标增量 
 206   1              delta_y=y2-y1; 
 207   1              uRow=x1; 
 208   1              uCol=y1; 
 209   1              if(delta_x>0)incx=1; //设置单步方向 
 210   1              else if(delta_x==0)incx=0;//垂直线 
 211   1              else {incx=-1;delta_x=-delta_x;} 
 212   1              if(delta_y>0)incy=1; 
 213   1              else if(delta_y==0)incy=0;//水平线 
 214   1              else{incy=-1;delta_y=-delta_y;} 
 215   1              if( delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
 216   1              else distance=delta_y; 
 217   1              for(t=0;t<=distance+1;t++ )//画线输出 
 218   1              {  
 219   2                      LCD_DrawPoint(uRow,uCol);//画点 
 220   2                      xerr+=delta_x ; 
 221   2                      yerr+=delta_y ; 
 222   2                      if(xerr>distance) 
 223   2                      { 
 224   3                              xerr-=distance; 
 225   3                              uRow+=incx; 
 226   3                      } 
 227   2                      if(yerr>distance) 
 228   2                      { 
 229   3                              yerr-=distance; 
 230   3                              uCol+=incy; 
 231   3                      } 
 232   2              }  
 233   1      }    
 234          //画矩形
 235          void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 236          {
 237   1              LCD_DrawLine(x1,y1,x2,y1);
 238   1              LCD_DrawLine(x1,y1,x1,y2);
 239   1              LCD_DrawLine(x1,y2,x2,y2);
 240   1              LCD_DrawLine(x2,y1,x2,y2);
 241   1      }
C51 COMPILER V9.01   LCD                                                                   02/22/2014 16:10:16 PAGE 5   

 242          //在指定位置画一个指定大小的圆
 243          //(x,y):中心点
 244          //r    :半径
 245          void Draw_Circle(u16 x0,u16 y0,u8 r)
 246          {
 247   1              int a,b;
 248   1              int di;
 249   1              a=0;b=r;          
 250   1              di=3-(r<<1);             //判断下个点位置的标志
 251   1              while(a<=b)
 252   1              {
 253   2                      LCD_DrawPoint(x0-b,y0-a);             //3           
 254   2                      LCD_DrawPoint(x0+b,y0-a);             //0           
 255   2                      LCD_DrawPoint(x0-a,y0+b);             //1       
 256   2                      LCD_DrawPoint(x0-b,y0-a);             //7           
 257   2                      LCD_DrawPoint(x0-a,y0-b);             //2             
 258   2                      LCD_DrawPoint(x0+b,y0+a);             //4               
 259   2                      LCD_DrawPoint(x0+a,y0-b);             //5
 260   2                      LCD_DrawPoint(x0+a,y0+b);             //6 
 261   2                      LCD_DrawPoint(x0-b,y0+a);             
 262   2                      a++;
 263   2                      //使用Bresenham算法画圆     
 264   2                      if(di<0)di +=4*a+6;       
 265   2                      else
 266   2                      {
 267   3                              di+=10+4*(a-b);   
 268   3                              b--;
 269   3                      } 
 270   2                      LCD_DrawPoint(x0+a,y0+b);
 271   2              }
 272   1      } 
 273          //在指定位置显示一个字符
 274          
 275          //num:要显示的字符:" "--->"~"
 276          //mode:叠加方式(1)还是非叠加方式(0)
 277          //在指定位置显示一个字符
 278          
 279          //num:要显示的字符:" "--->"~"
 280          
 281          //mode:叠加方式(1)还是非叠加方式(0)
 282          void LCD_ShowChar(u16 x,u16 y,u8 num,u8 mode)
 283          {
 284   1          u8 temp;
 285   1          u8 pos,t;
 286   1              u16 x0=x;
 287   1              u16 colortemp=POINT_COLOR;      
 288   1          if(x>LCD_W-16||y>LCD_H-16)return;       
 289   1              //设置窗口                 
 290   1              num=num-' ';//得到偏移后的值
 291   1              Address_set(x,y,x+8-1,y+16-1);      //设置光标位置 
 292   1              if(!mode) //非叠加方式
 293   1              {
 294   2                      for(pos=0;pos<16;pos++)
 295   2                      { 
 296   3                              temp=asc2_1608[(u16)num*16+pos];                 //调用1608字体
 297   3                              for(t=0;t<8;t++)
 298   3                          {                 
 299   4                              if(temp&0x01)POINT_COLOR=colortemp;
 300   4                                      else POINT_COLOR=BACK_COLOR;
 301   4                                      LCD_WR_DATA(POINT_COLOR);       
 302   4                                      temp>>=1; 
 303   4                                      x++;
C51 COMPILER V9.01   LCD                                                                   02/22/2014 16:10:16 PAGE 6   

 304   4                          }
 305   3                              x=x0;
 306   3                              y++;
 307   3                      }       
 308   2              }else//叠加方式
 309   1              {
 310   2                      for(pos=0;pos<16;pos++)
 311   2                      {
 312   3                          temp=asc2_1608[(u16)num*16+pos];             //调用1608字体
 313   3                              for(t=0;t<8;t++)
 314   3                          {                 
 315   4                              if(temp&0x01)LCD_DrawPoint(x+t,y+pos);//画一个点     
 316   4                              temp>>=1; 
 317   4                          }
 318   3                      }
 319   2              }
 320   1              POINT_COLOR=colortemp;                            
 321   1      }   
 322          //m^n函数
 323          u32 mypow(u8 m,u8 n)
 324          {
 325   1              u32 result=1;    
 326   1              while(n--)result*=m;    
 327   1              return result;
 328   1      }                        
 329          //显示2个数字
 330          //x,y :起点坐标  
 331          //len :数字的位数
 332          //color:颜色
 333          //num:数值(0~4294967295);       
 334          void LCD_ShowNum(u16 x,u16 y,u32 num,u8 len)
 335          {               
 336   1              u8 t,temp;
 337   1              u8 enshow=0;
 338   1              num=(u16)num;
 339   1              for(t=0;t<len;t++)
 340   1              {
 341   2                      temp=(num/mypow(10,len-t-1))%10;
 342   2                      if(enshow==0&&t<(len-1))
 343   2                      {
 344   3                              if(temp==0)
 345   3                              {
 346   4                                      LCD_ShowChar(x+8*t,y,' ',0);
 347   4                                      continue;
 348   4                              }else enshow=1; 
 349   3                               
 350   3                      }
 351   2                      LCD_ShowChar(x+8*t,y,temp+48,0); 
 352   2              }
 353   1      } 
 354          //显示2个数字
 355          //x,y:起点坐标
 356          //num:数值(0~99);        
 357          void LCD_Show2Num(u16 x,u16 y,u16 num,u8 len)
 358          {               
 359   1              u8 t,temp;                                                 
 360   1              for(t=0;t<len;t++)
 361   1              {
 362   2                      temp=(num/mypow(10,len-t-1))%10;
 363   2                      LCD_ShowChar(x+8*t,y,temp+'0',0); 
 364   2              }
 365   1      } 
C51 COMPILER V9.01   LCD                                                                   02/22/2014 16:10:16 PAGE 7   

 366          //显示字符串
 367          //x,y:起点坐标  
 368          //*p:字符串起始地址
 369          //用16字体
 370          void LCD_ShowString(u16 x,u16 y,const u8 *p)
 371          {         
 372   1          while(*p!='\0')
 373   1          {       
 374   2              if(x>LCD_W-16){x=0;y+=16;}
 375   2              if(y>LCD_H-16){y=x=0;LCD_Clear(RED);}
 376   2              LCD_ShowChar(x,y,*p,0);
 377   2              x+=8;
 378   2              p++;
 379   2          }  
 380   1      }
 381          
 382          
 383          
 384          
 385          
 386          
 387          
 388          
 389          
 390          
 391          
 392          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3318    ----
   CONSTANT SIZE    =      2    ----
   XDATA SIZE       =      4     115
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
